name: Deploy Backend EC2

on:
  push:
    branches: 404-Not-Found-Deployment-Testing

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/backend-ec2

      - name: Terraform Destroy (reset everything)
        run: terraform destroy -auto-approve
        working-directory: terraform/backend-ec2

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/backend-ec2

      - name: Debug - list files
        run: ls -la terraform/backend-ec2
        
      - name: Extract EC2 Public IP from AWS
        id: ec2_output
        shell: bash
        run: |
          # Get the instance ID by tag Name=NodeBackendEC2
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=NodeBackendEC2" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --output text)

          echo "🆔 INSTANCE_ID=$INSTANCE_ID"

          # Get the public IP of the instance
          EC2_PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)

          echo "🌐 EC2_PUBLIC_IP=$EC2_PUBLIC_IP"

          # Export to GitHub environment variable
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV

      - name: Write EC2 private key to file
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Install Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_PUBLIC_IP << 'EOF'
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo systemctl enable docker
            sudo systemctl start docker
          EOF
      
      - name: Copy backend and .env to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ec2_key.pem -r backend ec2-user@$EC2_PUBLIC_IP:/home/ec2-user/
          scp -o StrictHostKeyChecking=no -i ec2_key.pem backend/.env ec2-user@$EC2_PUBLIC_IP:/home/ec2-user/backend/.env
      
      - name: Build and run backend Docker container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ec2-user@$EC2_PUBLIC_IP << 'EOF'
            cd /home/ec2-user/backend
            docker build -t backend-app .
            docker run -d -p 8000:8000 --env-file .env backend-app
          EOF

